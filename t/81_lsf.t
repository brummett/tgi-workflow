#!/usr/bin/env perl

BEGIN {
    $ENV{UR_DBI_NO_COMMIT}=1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS}=1;
}

use strict;
use warnings;

use Test::More tests => 7;

use above 'Workflow';

require_ok('Workflow');
require_ok('Workflow::Dispatcher');
require_ok('Workflow::Dispatcher::Lsf');

my $resource = Workflow::Resource->create(mem_limit => 100);
my $lsf = Workflow::Dispatcher::Lsf->create(cluster => "default");
my $job = Workflow::Dispatcher::Job->create(
    resource => $resource,
    command => 'echo "Hello world"',
);

my $cmd = $lsf->get_command($job);
ok($cmd eq 'bsub -R \'select[ncpus>=1] span[hosts=1]\' -M 102400 -n 1 echo "Hello world"',
    "LSF bsub command format"
);

my $job_id = $lsf->execute($job);
ok(int($job_id), "Job id exists");

my $resource2 = Workflow::Resource->create(
    mem_request => 100,
    mem_limit => 1000,
    use_gtmp => 1,
    tmp_space => 1
);

my $job2 = Workflow::Dispatcher::Job->create(
    resource => $resource2,
    command => 'echo "Hello world"',
    queue => $ENV{WF_TEST_QUEUE},
    stdout => '/gscmnt/1234/4567/output.out',
    stderr => '/gscmnt/1234/4567/output.err'
);

$cmd = $lsf->get_command($job2);
is($cmd,   'bsub -R \'select[ncpus>=1 && mem>=100 && gtmp>=1] span[hosts=1] rusage[mem=100, gtmp=1]\' -M 1024000 -n 1 -q ' . $ENV{WF_TEST_QUEUE} . ' -o /gscmnt/1234/4567/output.out -e /gscmnt/1234/4567/output.err echo "Hello world"',
    "Job queue attribute sets queue"
);

my $resource3 = Workflow::Resource->create(
    mem_limit => 10000,
    mem_request => 1000,
    min_proc => 4,
    tmp_space => 88,
    max_tmp => 88
    );
my $job3 = Workflow::Dispatcher::Job->create(
    resource => $resource3,
    command => 'echo "Hello world"',
    queue => $ENV{WF_TEST_QUEUE},
    stdout => '/foo/output.out',
    stderr => '/foo/output.err'
);

$cmd = $lsf->get_command($job3);
is($cmd,'bsub -R \'select[ncpus>=4 && mem>=1000 && maxtmp>=90112 && tmp>=90112] span[hosts=1] rusage[mem=1000, tmp=90112]\' -M 10240000 -n 4 -q ' . $ENV{WF_TEST_QUEUE} . ' -o /foo/output.out -e /foo/output.err echo "Hello world"', "Example from apipe-test-2 works")

