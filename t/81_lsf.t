#!/usr/bin/env perl

BEGIN {
    $ENV{UR_DBI_NO_COMMIT}=1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS}=1;
}

use strict;
use warnings;

use Test::More tests => 6;

use above 'Workflow';

require_ok('Workflow');
require_ok('Workflow::Dispatcher');
require_ok('Workflow::Dispatcher::Lsf');

my $resource = Workflow::Resource->create(mem_limit => 100);
my $lsf = Workflow::Dispatcher::Lsf->create(cluster => "default");
my $job = Workflow::Dispatcher::Job->create(
    resource => $resource,
    command => 'echo "Hello world"'
);

my $cmd = $lsf->get_command($job);
ok($cmd eq 'bsub -R \'select[ncpus >= 1 && mem >= 100 && gtmp >= 1] span[hosts=1] rusage[mem=100, gtmp=1]\' -M 102400 echo "Hello world"',
    "LSF bsub command format"
);

my $job_id = $lsf->execute($job);
print $job_id . "\n";
ok($job_id, "Job id exists");

my $job2 = Workflow::Dispatcher::Job->create(
    resource => $resource,
    command => 'echo "Hello world"',
    queue => 'long'
);

$cmd = $lsf->get_command($job2);
ok($cmd eq 'bsub -R \'select[ncpus >= 1 && mem >= 100 && gtmp >= 1] span[hosts=1] rusage[mem=100, gtmp=1]\' -M 102400 -n 1 -q long echo "Hello world"',
    "Job queue attribute sets queue"
);

my $resource3 = Workflow::Resource->create(
    mem_limit => 10000,
    mem_request => 1000,
    min_proc => 4,
    tmp_space => 88);
my $job3 = Workflow::Dispatcher::Job->create(
    resource => $resource,
    command => 'echo "Hello world"',
    queue => 'long'
);

$cmd = $lsf->get_command($job3);
ok($cmd eq 'bsub -R \'select[ncpus>= 4 && mem>1000 && tmp>90000] span[hosts=1] rusage[tmp=90000, mem=1000]' -M 10000 -n 4 -o TODO FIXME 
